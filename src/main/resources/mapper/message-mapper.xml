<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">

    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

<!--    就是conversation一样的，conversationId一样的，选一个出来展示，（最大的那个）。from_id!=1是什么意思？-->
<!--    1是SYSTEM，系统通知，而这里只有私信。-->
    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in(
            select max(id)
            from `message` where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id=#{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid)
        from (
            select max(id) as maxid
            from `message`
            where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id=#{userId})
            group by conversation_id
        ) as m
    </select>


    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include>
        from `message`
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectLettersCount" resultType="int">
        select count(id)
        from `message`
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
    </select>

    <select id="selectLetterUnread" resultType="int">
        select count(id)
        from `message`
        where to_id=#{userId}
        and status=0
        and from_id!=1
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into `message` (<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update `message` set status=#{status} where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in(
            select max(id) from message
            where status!=2
            and from_id=1
            and to_id=#{userId}
            and conversation_id=#{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id) from message
        where status!=2
        and from_id=1
        and to_id=#{userId}
        and conversation_id=#{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message
        where status=0
        and from_id=1
        and to_id=#{userId}
        <if test="topic!=null">
            and conversation_id=#{topic}
        </if>
    </select>
</mapper>